

matador running on port 3000
{ response: 
   { output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     _hasBody: true,
     _trailer: '',
     finished: false,
     socket: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        bytesRead: 632,
        bytesWritten: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        ondrain: [Function],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Wed, 18 Jan 2012 06:28:54 GMT,
        _events: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Circular] },
     connection: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        bytesRead: 632,
        bytesWritten: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        ondrain: [Function],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Wed, 18 Jan 2012 06:28:54 GMT,
        _events: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Circular] },
     _events: { finish: [Function] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     app: 
      { stack: [Object],
        connections: 1,
        allowHalfOpen: true,
        _handle: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        cache: {},
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        __usedRouter: true },
     req: 
      { socket: [Object],
        connection: [Object],
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        trailers: {},
        readable: false,
        url: '/recipe',
        method: 'POST',
        statusCode: null,
        client: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        upgrade: false,
        originalUrl: '/recipe',
        query: {},
        app: [Object],
        res: [Circular],
        next: [Function: next],
        cookies: [Object],
        body: [Object],
        _decoder: [Object],
        _events: [Object],
        originalMethod: 'POST',
        _route_index: 0,
        route: [Object],
        params: [] } },
  request: 
   { socket: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        bytesRead: 632,
        bytesWritten: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        ondrain: [Function],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Wed, 18 Jan 2012 06:28:54 GMT,
        _events: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Object] },
     connection: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        bytesRead: 632,
        bytesWritten: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        ondrain: [Function],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Wed, 18 Jan 2012 06:28:54 GMT,
        _events: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Object] },
     httpVersion: '1.1',
     complete: true,
     headers: 
      { host: 'localhost:3000',
        connection: 'keep-alive',
        'content-length': '21',
        'cache-control': 'max-age=0',
        origin: 'http://localhost:3000',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.75 Safari/535.7',
        'content-type': 'application/x-www-form-urlencoded',
        accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
        referer: 'http://localhost:3000/recipe/new',
        'accept-encoding': 'gzip,deflate,sdch',
        'accept-language': 'en-US,en;q=0.8',
        'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3',
        cookie: 'mjx:menu=scale%3A100%26%3Bzscale%3A400%25' },
     trailers: {},
     readable: false,
     url: '/recipe',
     method: 'POST',
     statusCode: null,
     client: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        bytesRead: 632,
        bytesWritten: 0,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        ondrain: [Function],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Wed, 18 Jan 2012 06:28:54 GMT,
        _events: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Object] },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     upgrade: false,
     originalUrl: '/recipe',
     query: {},
     app: 
      { stack: [Object],
        connections: 1,
        allowHalfOpen: true,
        _handle: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        cache: {},
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        __usedRouter: true },
     res: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Object],
        connection: [Object],
        _events: [Object],
        _headers: [Object],
        _headerNames: [Object],
        app: [Object],
        req: [Circular] },
     next: [Function: next],
     cookies: { 'mjx:menu': 'scale:100&;zscale:400%' },
     body: { title: 'breadiest bread' },
     _decoder: 
      { encoding: 'utf8',
        charBuffer: <Buffer 00 00 00 e0>,
        charReceived: 0,
        charLength: 0 },
     _events: { data: [Function], end: [Function] },
     originalMethod: 'POST',
     _route_index: 0,
     route: 
      { path: '/recipe',
        method: 'post',
        callbacks: [Object],
        keys: [],
        regexp: /^\/recipe\/?$/i,
        params: [] },
     params: [] },
  next: [Function: callbacks],
  layout: 'layout',
  _viewFolder: 'recipe',
  beforeFilters: [],
  excludeFilters: [],
  viewFolder: [Getter/Setter] }
{ response: 
   { output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     _hasBody: true,
     _trailer: '',
     finished: false,
     socket: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        bytesRead: 4436,
        bytesWritten: 3149,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        ondrain: [Function],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Wed, 18 Jan 2012 06:29:07 GMT,
        _events: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Circular] },
     connection: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        bytesRead: 4436,
        bytesWritten: 3149,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        ondrain: [Function],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Wed, 18 Jan 2012 06:29:07 GMT,
        _events: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Circular] },
     _events: { finish: [Function] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     app: 
      { stack: [Object],
        connections: 1,
        allowHalfOpen: true,
        _handle: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        cache: [Object],
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        __usedRouter: true },
     req: 
      { socket: [Object],
        connection: [Object],
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        trailers: {},
        readable: false,
        url: '/recipe',
        method: 'POST',
        statusCode: null,
        client: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        upgrade: false,
        originalUrl: '/recipe',
        query: {},
        app: [Object],
        res: [Circular],
        next: [Function: next],
        cookies: [Object],
        body: [Object],
        _decoder: [Object],
        _events: [Object],
        originalMethod: 'POST',
        _route_index: 0,
        route: [Object],
        params: [] } },
  request: 
   { socket: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        bytesRead: 4436,
        bytesWritten: 3149,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        ondrain: [Function],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Wed, 18 Jan 2012 06:29:07 GMT,
        _events: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Object] },
     connection: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        bytesRead: 4436,
        bytesWritten: 3149,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        ondrain: [Function],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Wed, 18 Jan 2012 06:29:07 GMT,
        _events: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Object] },
     httpVersion: '1.1',
     complete: true,
     headers: 
      { host: 'localhost:3000',
        connection: 'keep-alive',
        'content-length': '13',
        'cache-control': 'max-age=0',
        origin: 'http://localhost:3000',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.7 (KHTML, like Gecko) Chrome/16.0.912.75 Safari/535.7',
        'content-type': 'application/x-www-form-urlencoded',
        accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
        referer: 'http://localhost:3000/recipe/new',
        'accept-encoding': 'gzip,deflate,sdch',
        'accept-language': 'en-US,en;q=0.8',
        'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3',
        cookie: 'mjx:menu=scale%3A100%26%3Bzscale%3A400%25' },
     trailers: {},
     readable: false,
     url: '/recipe',
     method: 'POST',
     statusCode: null,
     client: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        bytesRead: 4436,
        bytesWritten: 3149,
        allowHalfOpen: true,
        writable: true,
        readable: true,
        server: [Object],
        ondrain: [Function],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Wed, 18 Jan 2012 06:29:07 GMT,
        _events: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Object] },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     upgrade: false,
     originalUrl: '/recipe',
     query: {},
     app: 
      { stack: [Object],
        connections: 1,
        allowHalfOpen: true,
        _handle: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        cache: [Object],
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        __usedRouter: true },
     res: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Object],
        connection: [Object],
        _events: [Object],
        _headers: [Object],
        _headerNames: [Object],
        app: [Object],
        req: [Circular] },
     next: [Function: next],
     cookies: { 'mjx:menu': 'scale:100&;zscale:400%' },
     body: { title: 'bestest' },
     _decoder: 
      { encoding: 'utf8',
        charBuffer: <Buffer 48 8b 59 27>,
        charReceived: 0,
        charLength: 0 },
     _events: { data: [Function], end: [Function] },
     originalMethod: 'POST',
     _route_index: 0,
     route: 
      { path: '/recipe',
        method: 'post',
        callbacks: [Object],
        keys: [],
        regexp: /^\/recipe\/?$/i,
        params: [] },
     params: [] },
  next: [Function: callbacks],
  layout: 'layout',
  _viewFolder: 'recipe',
  beforeFilters: [],
  excludeFilters: [],
  viewFolder: [Getter/Setter] }
